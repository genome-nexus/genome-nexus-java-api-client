/*
 * Genome Nexus API
 * This page shows how to use HTTP requests to access the Genome Nexus API. There are more high level clients available in Python, R, JavaScript, TypeScript and various other languages as well as a command line client to annotate MAF and VCF. See https://docs.genomenexus.org/api.  Aside from programmatic clients there are web based tools to annotate variants, see https://docs.genomenexus.org/tools.   We currently only provide long-term support for the '/annotation' endpoint. The other endpoints might change.
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.genome_nexus.client;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Rcv
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2023-09-08T17:14:26.472-04:00")
public class Rcv {
  @SerializedName("accession")
  private String accession = null;

  @SerializedName("clinicalSignificance")
  private String clinicalSignificance = null;

  @SerializedName("origin")
  private String origin = null;

  @SerializedName("preferredName")
  private String preferredName = null;

  public Rcv accession(String accession) {
    this.accession = accession;
    return this;
  }

   /**
   * accession
   * @return accession
  **/
  @ApiModelProperty(value = "accession")
  public String getAccession() {
    return accession;
  }

  public void setAccession(String accession) {
    this.accession = accession;
  }

  public Rcv clinicalSignificance(String clinicalSignificance) {
    this.clinicalSignificance = clinicalSignificance;
    return this;
  }

   /**
   * clinical_significance
   * @return clinicalSignificance
  **/
  @ApiModelProperty(value = "clinical_significance")
  public String getClinicalSignificance() {
    return clinicalSignificance;
  }

  public void setClinicalSignificance(String clinicalSignificance) {
    this.clinicalSignificance = clinicalSignificance;
  }

  public Rcv origin(String origin) {
    this.origin = origin;
    return this;
  }

   /**
   * origin
   * @return origin
  **/
  @ApiModelProperty(value = "origin")
  public String getOrigin() {
    return origin;
  }

  public void setOrigin(String origin) {
    this.origin = origin;
  }

  public Rcv preferredName(String preferredName) {
    this.preferredName = preferredName;
    return this;
  }

   /**
   * preferred_name
   * @return preferredName
  **/
  @ApiModelProperty(value = "preferred_name")
  public String getPreferredName() {
    return preferredName;
  }

  public void setPreferredName(String preferredName) {
    this.preferredName = preferredName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Rcv rcv = (Rcv) o;
    return Objects.equals(this.accession, rcv.accession) &&
        Objects.equals(this.clinicalSignificance, rcv.clinicalSignificance) &&
        Objects.equals(this.origin, rcv.origin) &&
        Objects.equals(this.preferredName, rcv.preferredName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accession, clinicalSignificance, origin, preferredName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Rcv {\n");
    
    sb.append("    accession: ").append(toIndentedString(accession)).append("\n");
    sb.append("    clinicalSignificance: ").append(toIndentedString(clinicalSignificance)).append("\n");
    sb.append("    origin: ").append(toIndentedString(origin)).append("\n");
    sb.append("    preferredName: ").append(toIndentedString(preferredName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

