/*
 * Genome Nexus API
 * This page shows how to use HTTP requests to access the Genome Nexus API. There are more high level clients available in Python, R, JavaScript, TypeScript and various other languages as well as a command line client to annotate MAF and VCF. See https://docs.genomenexus.org/api.  Aside from programmatic clients there are web based tools to annotate variants, see https://docs.genomenexus.org/tools.   We currently only provide long-term support for the '/annotation' endpoint. The other endpoints might change.
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.genome_nexus.client;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * IntergenicConsequenceSummary
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-10-08T11:22:49.826-04:00")
public class IntergenicConsequenceSummary {
  @SerializedName("consequenceTerms")
  private List<String> consequenceTerms = null;

  @SerializedName("impact")
  private String impact = null;

  @SerializedName("variantAllele")
  private String variantAllele = null;

  @SerializedName("variantClassification")
  private String variantClassification = null;

  public IntergenicConsequenceSummary consequenceTerms(List<String> consequenceTerms) {
    this.consequenceTerms = consequenceTerms;
    return this;
  }

  public IntergenicConsequenceSummary addConsequenceTermsItem(String consequenceTermsItem) {
    if (this.consequenceTerms == null) {
      this.consequenceTerms = new ArrayList<String>();
    }
    this.consequenceTerms.add(consequenceTermsItem);
    return this;
  }

   /**
   * Get consequenceTerms
   * @return consequenceTerms
  **/
  @ApiModelProperty(value = "")
  public List<String> getConsequenceTerms() {
    return consequenceTerms;
  }

  public void setConsequenceTerms(List<String> consequenceTerms) {
    this.consequenceTerms = consequenceTerms;
  }

  public IntergenicConsequenceSummary impact(String impact) {
    this.impact = impact;
    return this;
  }

   /**
   * Get impact
   * @return impact
  **/
  @ApiModelProperty(value = "")
  public String getImpact() {
    return impact;
  }

  public void setImpact(String impact) {
    this.impact = impact;
  }

  public IntergenicConsequenceSummary variantAllele(String variantAllele) {
    this.variantAllele = variantAllele;
    return this;
  }

   /**
   * Get variantAllele
   * @return variantAllele
  **/
  @ApiModelProperty(value = "")
  public String getVariantAllele() {
    return variantAllele;
  }

  public void setVariantAllele(String variantAllele) {
    this.variantAllele = variantAllele;
  }

  public IntergenicConsequenceSummary variantClassification(String variantClassification) {
    this.variantClassification = variantClassification;
    return this;
  }

   /**
   * Get variantClassification
   * @return variantClassification
  **/
  @ApiModelProperty(value = "")
  public String getVariantClassification() {
    return variantClassification;
  }

  public void setVariantClassification(String variantClassification) {
    this.variantClassification = variantClassification;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IntergenicConsequenceSummary intergenicConsequenceSummary = (IntergenicConsequenceSummary) o;
    return Objects.equals(this.consequenceTerms, intergenicConsequenceSummary.consequenceTerms) &&
        Objects.equals(this.impact, intergenicConsequenceSummary.impact) &&
        Objects.equals(this.variantAllele, intergenicConsequenceSummary.variantAllele) &&
        Objects.equals(this.variantClassification, intergenicConsequenceSummary.variantClassification);
  }

  @Override
  public int hashCode() {
    return Objects.hash(consequenceTerms, impact, variantAllele, variantClassification);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IntergenicConsequenceSummary {\n");
    
    sb.append("    consequenceTerms: ").append(toIndentedString(consequenceTerms)).append("\n");
    sb.append("    impact: ").append(toIndentedString(impact)).append("\n");
    sb.append("    variantAllele: ").append(toIndentedString(variantAllele)).append("\n");
    sb.append("    variantClassification: ").append(toIndentedString(variantClassification)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

