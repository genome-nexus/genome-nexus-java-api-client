/*
 * Genome Nexus API
 * This page shows how to use HTTP requests to access the Genome Nexus API. There are more high level clients available in Python, R, JavaScript, TypeScript and various other languages as well as a command line client to annotate MAF and VCF. See https://docs.genomenexus.org/api.  Aside from programmatic clients there are web based tools to annotate variants, see https://docs.genomenexus.org/tools.   We currently only provide long-term support for the '/annotation' endpoint. The other endpoints might change.
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.genome_nexus.client;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.genome_nexus.JSON;

/**
 * PostTranslationalModification
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-12-26T11:53:02.948968527-05:00[America/New_York]")
public class PostTranslationalModification {
  public static final String SERIALIZED_NAME_ENSEMBL_TRANSCRIPT_IDS = "ensemblTranscriptIds";
  @SerializedName(SERIALIZED_NAME_ENSEMBL_TRANSCRIPT_IDS)
  private List<String> ensemblTranscriptIds;

  public static final String SERIALIZED_NAME_POSITION = "position";
  @SerializedName(SERIALIZED_NAME_POSITION)
  private Integer position;

  public static final String SERIALIZED_NAME_PUBMED_IDS = "pubmedIds";
  @SerializedName(SERIALIZED_NAME_PUBMED_IDS)
  private List<String> pubmedIds;

  public static final String SERIALIZED_NAME_SEQUENCE = "sequence";
  @SerializedName(SERIALIZED_NAME_SEQUENCE)
  private String sequence;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  public static final String SERIALIZED_NAME_UNIPROT_ACCESSION = "uniprotAccession";
  @SerializedName(SERIALIZED_NAME_UNIPROT_ACCESSION)
  private String uniprotAccession;

  public static final String SERIALIZED_NAME_UNIPROT_ENTRY = "uniprotEntry";
  @SerializedName(SERIALIZED_NAME_UNIPROT_ENTRY)
  private String uniprotEntry;

  public PostTranslationalModification() {
  }

  public PostTranslationalModification ensemblTranscriptIds(List<String> ensemblTranscriptIds) {
    this.ensemblTranscriptIds = ensemblTranscriptIds;
    return this;
  }

  public PostTranslationalModification addEnsemblTranscriptIdsItem(String ensemblTranscriptIdsItem) {
    if (this.ensemblTranscriptIds == null) {
      this.ensemblTranscriptIds = new ArrayList<>();
    }
    this.ensemblTranscriptIds.add(ensemblTranscriptIdsItem);
    return this;
  }

   /**
   * Get ensemblTranscriptIds
   * @return ensemblTranscriptIds
  **/
  @javax.annotation.Nullable
  public List<String> getEnsemblTranscriptIds() {
    return ensemblTranscriptIds;
  }

  public void setEnsemblTranscriptIds(List<String> ensemblTranscriptIds) {
    this.ensemblTranscriptIds = ensemblTranscriptIds;
  }


  public PostTranslationalModification position(Integer position) {
    this.position = position;
    return this;
  }

   /**
   * Get position
   * @return position
  **/
  @javax.annotation.Nullable
  public Integer getPosition() {
    return position;
  }

  public void setPosition(Integer position) {
    this.position = position;
  }


  public PostTranslationalModification pubmedIds(List<String> pubmedIds) {
    this.pubmedIds = pubmedIds;
    return this;
  }

  public PostTranslationalModification addPubmedIdsItem(String pubmedIdsItem) {
    if (this.pubmedIds == null) {
      this.pubmedIds = new ArrayList<>();
    }
    this.pubmedIds.add(pubmedIdsItem);
    return this;
  }

   /**
   * Get pubmedIds
   * @return pubmedIds
  **/
  @javax.annotation.Nullable
  public List<String> getPubmedIds() {
    return pubmedIds;
  }

  public void setPubmedIds(List<String> pubmedIds) {
    this.pubmedIds = pubmedIds;
  }


  public PostTranslationalModification sequence(String sequence) {
    this.sequence = sequence;
    return this;
  }

   /**
   * Get sequence
   * @return sequence
  **/
  @javax.annotation.Nullable
  public String getSequence() {
    return sequence;
  }

  public void setSequence(String sequence) {
    this.sequence = sequence;
  }


  public PostTranslationalModification type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nullable
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }


  public PostTranslationalModification uniprotAccession(String uniprotAccession) {
    this.uniprotAccession = uniprotAccession;
    return this;
  }

   /**
   * Get uniprotAccession
   * @return uniprotAccession
  **/
  @javax.annotation.Nullable
  public String getUniprotAccession() {
    return uniprotAccession;
  }

  public void setUniprotAccession(String uniprotAccession) {
    this.uniprotAccession = uniprotAccession;
  }


  public PostTranslationalModification uniprotEntry(String uniprotEntry) {
    this.uniprotEntry = uniprotEntry;
    return this;
  }

   /**
   * Get uniprotEntry
   * @return uniprotEntry
  **/
  @javax.annotation.Nullable
  public String getUniprotEntry() {
    return uniprotEntry;
  }

  public void setUniprotEntry(String uniprotEntry) {
    this.uniprotEntry = uniprotEntry;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PostTranslationalModification postTranslationalModification = (PostTranslationalModification) o;
    return Objects.equals(this.ensemblTranscriptIds, postTranslationalModification.ensemblTranscriptIds) &&
        Objects.equals(this.position, postTranslationalModification.position) &&
        Objects.equals(this.pubmedIds, postTranslationalModification.pubmedIds) &&
        Objects.equals(this.sequence, postTranslationalModification.sequence) &&
        Objects.equals(this.type, postTranslationalModification.type) &&
        Objects.equals(this.uniprotAccession, postTranslationalModification.uniprotAccession) &&
        Objects.equals(this.uniprotEntry, postTranslationalModification.uniprotEntry);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ensemblTranscriptIds, position, pubmedIds, sequence, type, uniprotAccession, uniprotEntry);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PostTranslationalModification {\n");
    sb.append("    ensemblTranscriptIds: ").append(toIndentedString(ensemblTranscriptIds)).append("\n");
    sb.append("    position: ").append(toIndentedString(position)).append("\n");
    sb.append("    pubmedIds: ").append(toIndentedString(pubmedIds)).append("\n");
    sb.append("    sequence: ").append(toIndentedString(sequence)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    uniprotAccession: ").append(toIndentedString(uniprotAccession)).append("\n");
    sb.append("    uniprotEntry: ").append(toIndentedString(uniprotEntry)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ensemblTranscriptIds");
    openapiFields.add("position");
    openapiFields.add("pubmedIds");
    openapiFields.add("sequence");
    openapiFields.add("type");
    openapiFields.add("uniprotAccession");
    openapiFields.add("uniprotEntry");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to PostTranslationalModification
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!PostTranslationalModification.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PostTranslationalModification is not found in the empty JSON string", PostTranslationalModification.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!PostTranslationalModification.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PostTranslationalModification` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the optional json data is an array if present
      if (jsonObj.get("ensemblTranscriptIds") != null && !jsonObj.get("ensemblTranscriptIds").isJsonNull() && !jsonObj.get("ensemblTranscriptIds").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `ensemblTranscriptIds` to be an array in the JSON string but got `%s`", jsonObj.get("ensemblTranscriptIds").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("pubmedIds") != null && !jsonObj.get("pubmedIds").isJsonNull() && !jsonObj.get("pubmedIds").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `pubmedIds` to be an array in the JSON string but got `%s`", jsonObj.get("pubmedIds").toString()));
      }
      if ((jsonObj.get("sequence") != null && !jsonObj.get("sequence").isJsonNull()) && !jsonObj.get("sequence").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sequence` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sequence").toString()));
      }
      if ((jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) && !jsonObj.get("type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("type").toString()));
      }
      if ((jsonObj.get("uniprotAccession") != null && !jsonObj.get("uniprotAccession").isJsonNull()) && !jsonObj.get("uniprotAccession").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `uniprotAccession` to be a primitive type in the JSON string but got `%s`", jsonObj.get("uniprotAccession").toString()));
      }
      if ((jsonObj.get("uniprotEntry") != null && !jsonObj.get("uniprotEntry").isJsonNull()) && !jsonObj.get("uniprotEntry").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `uniprotEntry` to be a primitive type in the JSON string but got `%s`", jsonObj.get("uniprotEntry").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PostTranslationalModification.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PostTranslationalModification' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PostTranslationalModification> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PostTranslationalModification.class));

       return (TypeAdapter<T>) new TypeAdapter<PostTranslationalModification>() {
           @Override
           public void write(JsonWriter out, PostTranslationalModification value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PostTranslationalModification read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of PostTranslationalModification given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of PostTranslationalModification
  * @throws IOException if the JSON string is invalid with respect to PostTranslationalModification
  */
  public static PostTranslationalModification fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PostTranslationalModification.class);
  }

 /**
  * Convert an instance of PostTranslationalModification to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

