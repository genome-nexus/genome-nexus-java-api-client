/*
 * Genome Nexus API
 * This page shows how to use HTTP requests to access the Genome Nexus API. There are more high level clients available in Python, R, JavaScript, TypeScript and various other languages as well as a command line client to annotate MAF and VCF. See https://docs.genomenexus.org/api.  Aside from programmatic clients there are web based tools to annotate variants, see https://docs.genomenexus.org/tools.   We currently only provide long-term support for the '/annotation' endpoint. The other endpoints might change.
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.genome_nexus.client;

import org.genome_nexus.ApiException;
import org.genome_nexus.client.SignalMutation;
import org.genome_nexus.client.SignalMutationFilter;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SignalMutationControllerApi
 */
@Disabled
public class SignalMutationControllerApiTest {

    private final SignalMutationControllerApi api = new SignalMutationControllerApi();

    /**
     * Retrieves SignalDB mutations by hgvgs variant
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void fetchSignalMutationsByHgvsgGETUsingGETTest() throws ApiException {
        String variant = null;
        List<SignalMutation> response = api.fetchSignalMutationsByHgvsgGETUsingGET(variant);
        // TODO: test validations
    }

    /**
     * Retrieves SignalDB mutations by Hugo Gene Symbol
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void fetchSignalMutationsByHugoSymbolGETUsingGETTest() throws ApiException {
        String hugoGeneSymbol = null;
        List<SignalMutation> response = api.fetchSignalMutationsByHugoSymbolGETUsingGET(hugoGeneSymbol);
        // TODO: test validations
    }

    /**
     * Retrieves SignalDB mutations by Mutation Filter
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void fetchSignalMutationsByMutationFilterPOSTUsingPOSTTest() throws ApiException {
        SignalMutationFilter mutationFilter = null;
        List<SignalMutation> response = api.fetchSignalMutationsByMutationFilterPOSTUsingPOST(mutationFilter);
        // TODO: test validations
    }

}
