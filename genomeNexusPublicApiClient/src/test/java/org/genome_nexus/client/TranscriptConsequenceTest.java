/*
 * Genome Nexus API
 * This page shows how to use HTTP requests to access the Genome Nexus API. There are more high level clients available in Python, R, JavaScript, TypeScript and various other languages as well as a command line client to annotate MAF and VCF. See https://docs.genomenexus.org/api.  Aside from programmatic clients there are web based tools to annotate variants, see https://docs.genomenexus.org/tools.   We currently only provide long-term support for the '/annotation' endpoint. The other endpoints might change.
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.genome_nexus.client;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for TranscriptConsequence
 */
public class TranscriptConsequenceTest {
    private final TranscriptConsequence model = new TranscriptConsequence();

    /**
     * Model tests for TranscriptConsequence
     */
    @Test
    public void testTranscriptConsequence() {
        // TODO: test TranscriptConsequence
    }

    /**
     * Test the property 'aminoAcids'
     */
    @Test
    public void aminoAcidsTest() {
        // TODO: test aminoAcids
    }

    /**
     * Test the property 'canonical'
     */
    @Test
    public void canonicalTest() {
        // TODO: test canonical
    }

    /**
     * Test the property 'codons'
     */
    @Test
    public void codonsTest() {
        // TODO: test codons
    }

    /**
     * Test the property 'consequenceTerms'
     */
    @Test
    public void consequenceTermsTest() {
        // TODO: test consequenceTerms
    }

    /**
     * Test the property 'exon'
     */
    @Test
    public void exonTest() {
        // TODO: test exon
    }

    /**
     * Test the property 'geneId'
     */
    @Test
    public void geneIdTest() {
        // TODO: test geneId
    }

    /**
     * Test the property 'geneSymbol'
     */
    @Test
    public void geneSymbolTest() {
        // TODO: test geneSymbol
    }

    /**
     * Test the property 'hgncId'
     */
    @Test
    public void hgncIdTest() {
        // TODO: test hgncId
    }

    /**
     * Test the property 'hgvsc'
     */
    @Test
    public void hgvscTest() {
        // TODO: test hgvsc
    }

    /**
     * Test the property 'hgvsg'
     */
    @Test
    public void hgvsgTest() {
        // TODO: test hgvsg
    }

    /**
     * Test the property 'hgvsp'
     */
    @Test
    public void hgvspTest() {
        // TODO: test hgvsp
    }

    /**
     * Test the property 'polyphenPrediction'
     */
    @Test
    public void polyphenPredictionTest() {
        // TODO: test polyphenPrediction
    }

    /**
     * Test the property 'polyphenScore'
     */
    @Test
    public void polyphenScoreTest() {
        // TODO: test polyphenScore
    }

    /**
     * Test the property 'proteinEnd'
     */
    @Test
    public void proteinEndTest() {
        // TODO: test proteinEnd
    }

    /**
     * Test the property 'proteinId'
     */
    @Test
    public void proteinIdTest() {
        // TODO: test proteinId
    }

    /**
     * Test the property 'proteinStart'
     */
    @Test
    public void proteinStartTest() {
        // TODO: test proteinStart
    }

    /**
     * Test the property 'refseqTranscriptIds'
     */
    @Test
    public void refseqTranscriptIdsTest() {
        // TODO: test refseqTranscriptIds
    }

    /**
     * Test the property 'siftPrediction'
     */
    @Test
    public void siftPredictionTest() {
        // TODO: test siftPrediction
    }

    /**
     * Test the property 'siftScore'
     */
    @Test
    public void siftScoreTest() {
        // TODO: test siftScore
    }

    /**
     * Test the property 'transcriptId'
     */
    @Test
    public void transcriptIdTest() {
        // TODO: test transcriptId
    }

    /**
     * Test the property 'uniprotId'
     */
    @Test
    public void uniprotIdTest() {
        // TODO: test uniprotId
    }

    /**
     * Test the property 'variantAllele'
     */
    @Test
    public void variantAlleleTest() {
        // TODO: test variantAllele
    }

}
