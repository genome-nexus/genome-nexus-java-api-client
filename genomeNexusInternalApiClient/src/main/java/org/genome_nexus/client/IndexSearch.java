/*
 * Genome Nexus API
 * This page shows how to use HTTP requests to access the Genome Nexus API. There are more high level clients available in Python, R, JavaScript, TypeScript and various other languages as well as a command line client to annotate MAF and VCF. See https://docs.genomenexus.org/api.  Aside from programmatic clients there are web based tools to annotate variants, see https://docs.genomenexus.org/tools.   We currently only provide long-term support for the '/annotation' endpoint. The other endpoints might change.
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.genome_nexus.client;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.genome_nexus.client.Index;

/**
 * IndexSearch
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2022-12-08T09:04:00.294-08:00")
public class IndexSearch {
  /**
   * Gets or Sets queryType
   */
  @JsonAdapter(QueryTypeEnum.Adapter.class)
  public enum QueryTypeEnum {
    GENE_HGVSPSHORT("GENE_HGVSPSHORT"),
    
    GENE_CDNA("GENE_CDNA"),
    
    GENE_HGVSP("GENE_HGVSP"),
    
    HGVSG("HGVSG"),
    
    HGVSC("HGVSC");

    private String value;

    QueryTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static QueryTypeEnum fromValue(String text) {
      for (QueryTypeEnum b : QueryTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<QueryTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final QueryTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public QueryTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return QueryTypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("queryType")
  private QueryTypeEnum queryType = null;

  @SerializedName("results")
  private List<Index> results = null;

  public IndexSearch queryType(QueryTypeEnum queryType) {
    this.queryType = queryType;
    return this;
  }

   /**
   * Get queryType
   * @return queryType
  **/
  @ApiModelProperty(value = "")
  public QueryTypeEnum getQueryType() {
    return queryType;
  }

  public void setQueryType(QueryTypeEnum queryType) {
    this.queryType = queryType;
  }

  public IndexSearch results(List<Index> results) {
    this.results = results;
    return this;
  }

  public IndexSearch addResultsItem(Index resultsItem) {
    if (this.results == null) {
      this.results = new ArrayList<Index>();
    }
    this.results.add(resultsItem);
    return this;
  }

   /**
   * Get results
   * @return results
  **/
  @ApiModelProperty(value = "")
  public List<Index> getResults() {
    return results;
  }

  public void setResults(List<Index> results) {
    this.results = results;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IndexSearch indexSearch = (IndexSearch) o;
    return Objects.equals(this.queryType, indexSearch.queryType) &&
        Objects.equals(this.results, indexSearch.results);
  }

  @Override
  public int hashCode() {
    return Objects.hash(queryType, results);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IndexSearch {\n");
    
    sb.append("    queryType: ").append(toIndentedString(queryType)).append("\n");
    sb.append("    results: ").append(toIndentedString(results)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

